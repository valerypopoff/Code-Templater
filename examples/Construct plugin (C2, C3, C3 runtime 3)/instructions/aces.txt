
// This is a named domain of variables. The example template that goes with this instruction
// relies on you describing every ACE in a separate domain named ACE.


{	ACE
	
	@@@ACES_C2_EDITTIME		Condition
	@@@ACES_C3_JSON_TYPE	conditions
	@@@CATEGORY_ID			custom
	@@@CATEGORY_NAME 		Custom

	@@@ID_C2				0
	@@@ID_C3				is-large-number

	// Flags
	{
		// About C2 ACE flags read here: https://www.scirra.com/manual/19/actions-conditions-and-expressions
		@@@FLAGS_C2			cf_none

		// About C3 ACE flags read here: https://www.construct.net/make-games/manuals/addon-sdk/guide/defining-aces
		// You can delete — as well as leave undefined — flags that you don't want to use. Otherwise assing to the flags anything that is not empty string
		@@@IS_DEPRECATED_C3 	
		@@@IS_TRIGGER_C3
		@@@IS_FAKETRIGGER_C3
		@@@IS_STATIC_C3
		@@@IS_LOOPING_C3
		@@@IS_INVERTIBLE_C3
		@@@IS_COMPATIBLEWITHTRIGGERS_C3
	}

	@@@HIGHLIGHT			true
	@@@LIST_NAME			Is large number
	@@@DISPLAY_STRING 		Is [i]{0}[/i] a large number. There's also {1} that doesn't matter
	@@@DESCRIPTION 			Test if a number is greater than 100.

	@@@SCRIPT_NAME 			IsLargeNumber


	// This is a good practice to enclose parameters description in a bracket group

	// Params
	{
		// NumberParam, StringParam, AnyTypeParam, CmpParam, ComboParamOption, ObjectParam, LayerParam, LayoutParam, KeybParam, AnimationParam, AudioFileParam
		@@@PARAM_TYPE_C2 		AnyTypeParam
		@@@PARAM_TYPE_C3 		any
		@@@PARAM_ID_C3 			comparison-options
		@@@PARAM_LABEL 			Number
		@@@PARAM_DESCRIPTION	Number to test if greater than 100.
		@@@PARAM_INIT_VALUE		50
		
		@@@PARAM_TYPE_C2 		AnyTypeParam
		@@@PARAM_TYPE_C3 		any
		@@@PARAM_ID_C3 			some-param
		@@@PARAM_LABEL 			Some param
		@@@PARAM_DESCRIPTION	An exessive value.
		@@@PARAM_INIT_VALUE		
	}
	
	###SCRIPT
		IsLargeNumber: function(number)
		{
			return number > 100;
		}
	###
}

{	ACE
	
	@@@ACES_C2_EDITTIME		Action
	@@@ACES_C3_JSON_TYPE	actions
	@@@CATEGORY_ID			super-custom
	@@@CATEGORY_NAME 		Super custom

	@@@ID_C2				0
	@@@ID_C3				do-alert
	@@@FLAGS_C2				af_none
	@@@HIGHLIGHT			true
	@@@LIST_NAME			Do alert
	@@@DISPLAY_STRING 		Do alert with message {0} and \"{1}\"
	@@@DESCRIPTION 			Do a dummy alert.

	@@@SCRIPT_NAME 			Alert

	
	// Params
	{
		@@@PARAM_TYPE_C2 		StringParam
		@@@PARAM_TYPE_C3 		string
		@@@PARAM_ID_C3 			alert-text
		@@@PARAM_LABEL 			Alert text
		@@@PARAM_DESCRIPTION	Enter alert message.
		@@@PARAM_INIT_VALUE		\"Hello world\"
		
		@@@PARAM_TYPE_C2 		ComboParam
		@@@PARAM_TYPE_C3 		combo
		@@@PARAM_ID_C3 			alert-add-variants
		@@@PARAM_LABEL 			What to add
		@@@PARAM_DESCRIPTION	What to add to the alert message.
		@@@PARAM_INIT_COMBO_C3	dont-call-me
		@@@PARAM_INIT_COMBO_C2	1

		// @@@PARAM_COMBO_ID and @@@PARAM_COMBO_TEXT correspond to the second parameter so they 
		// must go AFTER the regular parameter variables.
		// If you put @@@PARAM_COMBO_ID or @@@PARAM_COMBO_TEXT before @@@PARAM_TYPE_C2, 
		// Templater will think these are the first parameter variables.
		
		@@@PARAM_COMBO_ID		dont-care
		@@@PARAM_COMBO_TEXT		And I don't care

		@@@PARAM_COMBO_ID		dont-call-me
		@@@PARAM_COMBO_TEXT		And don't call me Shirley

		@@@PARAM_COMBO_ID		so-kiss-me
		@@@PARAM_COMBO_TEXT		So kiss me darling
	}

	###SCRIPT
		Alert: function(alert_msg, combo)
		{
			var combo_text;
			switch( combo )
			{
				case 0: combo_text = "And I don't care"; break;
				case 1: combo_text = "And don't call me Shirley"; break;
				case 2: combo_text = "So kiss me darling"; break;
			}

			alert(alert_msg + " " + combo_text);
			alert("By the way, first plugin property = " + this.testProperty);
			alert("By the way, 512 is large = " + this.CNDS.IsLargeNumber(512));

			// These two functions will log to the console
			this.Foo( 1024 );
			this.Bar( "One thousand and twenty four" );
		}
	###
}

{	ACE
	
	@@@ACES_C2_EDITTIME		Expression
	@@@ACES_C3_JSON_TYPE	expressions
	@@@CATEGORY_ID			custom
	@@@CATEGORY_NAME 		Custom

	@@@ID_C2				0
	@@@ID_C3				double
	@@@FLAGS_C2				ef_return_any | ef_variadic_parameters
	@@@RETURN_TYPE_C3		any
	@@@IS_VARIADIC_PARAMS_C3	true
	@@@HIGHLIGHT			true
	@@@LIST_NAME			Double
	@@@DESCRIPTION 			Double a number.

	@@@SCRIPT_NAME 			Double

	###SCRIPT
		Double: function(ret, number) 
		{
			ret.set_any(number * 2);    	
		}
	###

	###SCRIPT_C3_RUNTIME
		Double: function(number) 
		{
			return number * 2;
		}
	###
}
