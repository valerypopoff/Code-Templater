@@@PLUGIN_NAME					My Custom Plugin
@@@PLUGIN_VERSION				1.0.0
@@@PLUGIN_DESCRIPTION			An example third-party plugin.

@@@PLUGIN_AUTHOR				John Doe
@@@PLUGIN_AUTHOR_WEBSITE		http://johndoe.com/
@@@PLUGIN_HELP_URL				http://johndoe.com/mycustomplugin/

@@@PLUGIN_ID					MyCustomPlugin
@@@PLUGIN_ID_IN_LOWER_CASE		mycustomplugin


// Only one of these two variables must be set to whatever that is not an empty string. The other one must be left undefined
@@@PLUGIN_IS_OBJECT_TYPE		yes
@@@PLUGIN_IS_WORLD_TYPE			

// Can be set to anything you like. Case sensitive.
@@@PLUGIN_CATEGORY_C2			General

// Must be one of "data-and-storage", "form-controls", "general", "input", "media", "monetisation", "platform-specific", "web", "other".
// Read about it here: https://www.construct.net/make-games/manuals/addon-sdk/guide/configuring-plugins
@@@PLUGIN_CATEGORY_C3			general



// For no flags put 0. About flags read here: https://www.scirra.com/manual/18/plugin-settings
@@@PLUGIN_FLAGS_C2				pf_singleglobal

// Assign true or false
@@@PLUGIN_ISSINGLEGLOBAL_C3		true
@@@PLUGIN_CANBEBUNDELED_C3		true

@@@PLUGIN_ISROTATABLE			false
@@@PLUGIN_ISRESIZABLE_C3		false
@@@PLUGIN_HASIMAGE_C3			false
@@@PLUGIN_ISTILED_C3			false
@@@PLUGIN_ISDEPRECATED_C3		false
@@@PLUGIN_SUPPORTSEFFECTS_C3	false
@@@PLUGIN_MUSTPREDRAW_C3		false


// Must be left undefined if you don't want them activated. Otherwise, assign "true" or whatever that is not an empty string
@@@PLUGIN_AddCommonPositionACEs_C3
@@@PLUGIN_AddCommonSizeACEs_C3
@@@PLUGIN_AddCommonAngleACEs_C3
@@@PLUGIN_AddCommonAppearanceACEs_C3
@@@PLUGIN_AddCommonZOrderACEs_C3

@@@PLUGIN_SUPPORTED_RUNTIMES	"c2", "c3"


// Plugin properties
{	PROPS

	@@@ID_C3		test-property
	// About C2 property types read here: https://www.scirra.com/manual/20/properties
	@@@TYPE_C2		ept_integer
	// About C3 property types read here: https://www.construct.net/make-games/manuals/addon-sdk/reference/pluginproperty
	@@@TYPE_C3		integer
	@@@NAME			Test property
	@@@DESCRIPTION	Test roperty description.
	@@@INIT_VALUE	0

	@@@ID_C3		another-test-property
	@@@TYPE_C2		ept_integer
	@@@TYPE_C3		integer
	@@@NAME			Another test property
	@@@DESCRIPTION	Another test roperty description.
	@@@INIT_VALUE	0

	@@@ID_C3		string-property
	@@@TYPE_C2		ept_text
	@@@TYPE_C3		longtext
	@@@NAME			String property
	@@@DESCRIPTION	String roperty description.
	@@@INIT_VALUE	"Hey!"

	// Combo propery
	@@@ID_C3				combo-property
	@@@TYPE_C2				ept_combo
	@@@TYPE_C3				combo
	@@@NAME					Combo property
	@@@DESCRIPTION			Just a combo property.
	@@@PARAM_INIT_COMBO_C2	"One"
	@@@PARAM_INIT_COMBO_C3	id-one

	@@@PARAM_COMBO_ID		id-one
	@@@PARAM_COMBO_TEXT		One

	@@@PARAM_COMBO_ID		id-two
	@@@PARAM_COMBO_TEXT		Two
}


//goes to the code before everything else
###ANY_RUNTIME
	if( window === undefined )
	{
		var window = ("undefined" == typeof window) ? 
						("undefined" == typeof global) ? 
							("undefined" == typeof self) ? 
							this
							:self
						:global
					:window;
	}
###


//goes to the corresponding runtime global scope before everything else and helps workaround sdk-specific cases
###CONSTRUCT2_C2_RUNTIME
	var __CONSTRUCT2_RUNTIME2__ = true;
	var __CONSTRUCT3_RUNTIME2__ = false;
	var __CONSTRUCT3_RUNTIME3__ = false;
### 

###CONSTRUCT3_C2_RUNTIME
	var __CONSTRUCT2_RUNTIME2__ = false;
	var __CONSTRUCT3_RUNTIME2__ = true;
	var __CONSTRUCT3_RUNTIME3__ = false;
### 

###CONSTRUCT3_C3_RUNTIME
	var __CONSTRUCT2_RUNTIME2__ = false;
	var __CONSTRUCT3_RUNTIME2__ = false;
	var __CONSTRUCT3_RUNTIME3__ = true;
### 


// Code that goes to the constructor body
###INSTANCE_CONSTRUCTOR_BODY
	this.testProperty = this.properties[0];


	// Uncomment this if you need ticking
	/*
	if( __CONSTRUCT2_RUNTIME2__ || __CONSTRUCT3_RUNTIME2__ )
	this.runtime.tickMe(this);

	if( __CONSTRUCT3_RUNTIME3__ )
	{
		this._StartTicking();
		this._StartTicking2();
	}
	*/
###



// Additional instance properties (will be accessible from the ACEs methods)
###INSTANCE_OBJECT
{
	Foo: function(num)
	{
		console.log( "I got the number: " + num );
	},
	
	Bar: function(str)
	{
		console.log( "I got the string: " + str );
	}
}
###


// TICK -------------------------

// Called in both C2 and C3
###TICK_FUNCTION_BODY

###

// Called in C3 only
###TICK2_FUNCTION_BODY

###


// SAVE/LOAD ------------------------

// Called in both C2 and C3
###SAVETOJSON_FUNCTION_BODY
	return {}
###

// Called in both C2 and C3
###LOADFROMJSON_FUNCTION_BODY
	//Function has one argument called "o"
###



// DRAW --------------------------

// Only called if a layout object - draw to a canvas 2D context
###C2_CANVAS_DRAW_FUNCTION_BODY
	//Function has one argument called "ctx"
###

// Only called if a layout object in WebGL mode - draw to the WebGL context
// 'glw' is not a WebGL context, it's a wrapper - you can find its methods in GLWrap.js in the C2 install
// directory or just copy what other plugins do.
###C2_WEBGL_DRAW_FUNCTION_BODY
	//Function has one argument called "glw"
###

###C2_EDITOR_DRAW_FUNCTION_BODY
	//Function has one argument called "renderer"
###

###C3_RUNTIME_DRAW_FUNCTION_BODY
	//Function has one argument called "renderer"
###

###C3_EDITOR_DRAW_FUNCTION_BODY
	//Function has two arguments called "iRenderer" and "iDrawParams"
###



// Routines ------------------------

// Any code that will be placed in global scope (and will be accessible from the ACEs methods) 
###ROUTINES
	var SomeGlobalFunction = function()
	{	
		//
	}
###